{"version":3,"sources":["components/HOC.js","components/ComponentProvider.js","components/Languages.js","components/Countries.js","App.js","index.js"],"names":["AsList","items","SomeComponent","name","onClick","id","i","arr","length","upDiv","document","getElementById","parentNode","style","display","liElements","firstChild","children","forEach","call","li","lastChild","nextElementSibling","className","map","item","uniqueKey","uuidv4","event","target","code","ComponentContext","React","createContext","asList","data","ComponentProvider","useQuery","gql","loading","error","contextValue","Provider","value","Languages","props","useContext","LanguagesList","languages","Countries","CountriesList","countries","App","continents","ContinentsList","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider"],"mappings":"2RAMaA,EAAS,SAACC,GAAuC,IAAhCC,EAA+B,uDAAf,KAAMC,EAAS,uCAErDC,EAAU,SAACC,EAAIC,EAAGC,GAEtB,GAAID,IAAMC,EAAIC,OAAS,GAAKD,EAAID,GAAGH,OAASA,EAAO,CACjD,IACMM,EADSC,SAASC,eAAeN,GAClBO,WAAWA,WAAWA,WAC3CH,EAAMI,MAAMC,QAAU,OACtB,IAAMC,EAAaN,EAAMO,WAAWC,SAEpC,GAAGC,QAAQC,KAAKJ,GAAY,SAAUK,GACpCA,EAAGC,UAAUR,MAAMC,QAAU,cAG1B,CACWJ,SAASC,eAAeN,GAAIiB,mBACpCT,MAAMC,QAAU,UAI5B,OAAO,kBACL,oBAAIS,UAAU,aAAd,SACGtB,EAAMuB,KAAI,SAACC,EAAMnB,EAAGC,GACnB,IAAMmB,EAAYC,cAElB,OACE,qBAAoBJ,UAAU,YAA9B,UACE,wBACEA,UAAU,OACVlB,GAAIqB,EACJtB,QAAS,SAACwB,GAAD,OAAWxB,EAAQwB,EAAMC,OAAOxB,GAAIC,EAAGC,IAHlD,SAKGkB,EAAKtB,OAER,qBAAKoB,UAAU,sBAAf,SAAqC,cAACrB,EAAD,eAAoBuB,QARlDA,EAAKK,a,gBCxBXC,EAAmBC,IAAMC,cAAc,CAClDC,OAAQ,aACRC,KAAM,KAGKC,EAAoB,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAClC,EAAiCoB,YAASC,YAAA,IAAD,kNAAjCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOL,EAAxB,EAAwBA,KAiBxB,GAAII,EAAS,OAAO,2CACpB,GAAIC,EAAO,OAAO,yCAElB,IAAMC,EAAe,CACnBN,OACAnC,UAGF,OACE,cAAC+B,EAAiBW,SAAlB,CAA2BC,MAAOF,EAAlC,SACGxB,KCtCM2B,EAAY,SAACC,GACxB,IAAQ7C,EAAW8C,qBAAWf,GAAtB/B,OACF+C,EAAgB/C,EAAO6C,EAAMG,UAAWhD,GAE9C,OAAQ,cAAC+C,EAAD,KCFGE,EAAY,SAACJ,GACxB,IACMK,GAAgBlD,EADH8C,qBAAWf,GAAtB/B,QACqB6C,EAAMM,UAAWP,GAE9C,OAAQ,cAACM,EAAD,K,MCOKE,MARf,WACE,MAAyBN,qBAAWf,GAA5BI,EAAR,EAAQA,KAAMnC,EAAd,EAAcA,OACRG,EAAOgC,EAAKkB,WAAWlB,EAAKkB,WAAW7C,OAAS,GAAGL,KACnDmD,EAAiBtD,EAAOmC,EAAKkB,WAAYJ,EAAW9C,GAE1D,OAAQ,cAACmD,EAAD,K,wBCEJC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,sCACLC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJ7C,SAASC,eAAe,W","file":"static/js/main.1cdd5de0.chunk.js","sourcesContent":["import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './HOCstyle.css';\n\nexport const AsList = (items, SomeComponent = null, name) => {\n\n  const onClick = (id, i, arr) => {\n\n    if (i === arr.length - 1 && arr[i].name !== name ) {\n      const button = document.getElementById(id);\n      const upDiv = button.parentNode.parentNode.parentNode;\n      upDiv.style.display = 'none';\n      const liElements = upDiv.firstChild.children;\n\n      [].forEach.call(liElements, function (li) {\n        li.lastChild.style.display = 'none';\n      });\n\n    } else {\n      const nextDiv = document.getElementById(id).nextElementSibling;\n      nextDiv.style.display = 'block';\n    }\n  };\n\n  return () => (\n    <ul className='list-group'>\n      {items.map((item, i, arr) => {\n        const uniqueKey = uuidv4();\n\n        return (\n          <li key={item.code} className='list-item'>\n            <button\n              className='node'\n              id={uniqueKey}\n              onClick={(event) => onClick(event.target.id, i, arr)}\n            >\n              {item.name}\n            </button>\n            <div className='component-container'><SomeComponent  {...item} /></div>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n","import React from 'react';\nimport { AsList } from './HOC';\n\nimport {\n  gql,\n  useQuery,\n} from \"@apollo/client\";\n\nexport const ComponentContext = React.createContext({\n  asList: () => {},\n  data: {},\n})\n\nexport const ComponentProvider = ({ children }) => {\n  const { loading, error, data } = useQuery(gql`\n  query {\n    continents {\n      code\n      name\n      countries {\n        code\n        name\n        languages {\n          name\n          code\n        }\n      }\n    }\n  }\n`);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const contextValue = {\n    data,\n    AsList,\n  }\n\n  return (\n    <ComponentContext.Provider value={contextValue}>\n      {children}\n    </ComponentContext.Provider>\n  )\n}\n","import { useContext } from 'react';\nimport { ComponentContext } from './ComponentProvider';\n\nexport const Languages = (props) => {\n  const { AsList } = useContext(ComponentContext);\n  const LanguagesList = AsList(props.languages, AsList);\n\n  return (<LanguagesList />)\n}\n","import { useContext } from 'react';\nimport { ComponentContext } from './ComponentProvider';\nimport { Languages } from './Languages';\n\n\nexport const Countries = (props) => {\n  const { AsList } = useContext(ComponentContext);\n  const CountriesList = AsList(props.countries, Languages);\n\n  return (<CountriesList />);\n}\n","import React, { useContext } from 'react';\nimport { Countries } from './components/Countries';\n\nimport { ComponentContext } from './components/ComponentProvider';\n\nimport './App.css';\n\n\nfunction App() {\n  const { data, AsList } = useContext(ComponentContext);\n  const name = data.continents[data.continents.length - 1].name;\n  const ContinentsList = AsList(data.continents, Countries, name);\n\n  return (<ContinentsList />);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ComponentProvider } from './components/ComponentProvider';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  // gql,\n} from \"@apollo/client\";\n\n// export const dataFromServer = (string) => gql`${string}`;\n\nconst client = new ApolloClient({\n  uri: 'https://countries.trevorblades.com/',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ComponentProvider>\n      <App />\n    </ComponentProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}