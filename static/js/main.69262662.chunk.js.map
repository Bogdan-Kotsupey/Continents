{"version":3,"sources":["components/HOC.js","components/ComponentProvider.js","components/Languages.js","components/Countries.js","App.js","index.js"],"names":["AsList","items","SomeComponent","map","item","name","console","log","code","Finish","ComponentContext","React","createContext","asList","data","ComponentProvider","children","useQuery","gql","loading","error","contextValue","Provider","value","Languages","props","LanguagesList","useContext","languages","Countries","CountriesList","countries","App","ContinentsList","continents","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"sPAAaA,EAAS,SAACC,EAAOC,GAC5B,OAAO,kBACL,6BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,+BACGA,EAAKC,KACLC,QAAQC,IAAIH,GACb,cAACF,EAAD,eAAmBE,MAHZA,EAAKI,aAUTC,EAAS,SAACR,GACrB,OAAO,kBACL,6BACGA,EAAME,KAAI,SAAAC,GAAI,OACb,6BACGA,EAAKC,MADCD,EAAKI,a,gBCVTE,EAAmBC,IAAMC,cAAc,CAClDC,OAAQ,aACRC,KAAM,KAGKC,EAAoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClC,EAAiCC,YAASC,YAAA,IAAD,kMAAjCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAON,EAAxB,EAAwBA,KAgBxB,GAAIK,EAAS,OAAO,2CACpB,GAAIC,EAAO,OAAO,yCAGlBd,QAAQC,IAAIO,GAEZ,IAAMO,EAAe,CACnBP,OACAd,UAGF,OACE,cAACU,EAAiBY,SAAlB,CAA2BC,MAAOF,EAAlC,SACGL,KCvCMQ,EAAY,SAACC,GACxB,IACMC,GAAgB1B,EADH2B,qBAAWjB,GAAtBV,QACqByB,EAAMG,UAAWnB,GAE9C,OAAQ,cAACiB,EAAD,KCHGG,EAAY,SAACJ,GACxB,IACMK,GAAgB9B,EADH2B,qBAAWjB,GAAtBV,QACqByB,EAAMM,UAAWP,GAE9C,OAAQ,cAACM,EAAD,K,MCOKE,MATf,WACE,MAAyBL,qBAAWjB,GAA5BI,EAAR,EAAQA,KACFmB,GAAiBjC,EADvB,EAAcA,QACgBc,EAAKoB,WAAYL,GAE/C,OACE,cAACI,EAAD,K,wBCGEE,EAAS,IAAIC,IAAa,CAC9BC,IAAK,sCACLC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.69262662.chunk.js","sourcesContent":["export const AsList = (items, SomeComponent) => {\n  return () => (\n    <ul>\n      {items.map(item => (\n        <li key={item.code}>\n          {item.name}\n          {console.log(item)}\n          <SomeComponent {...item} />\n        </li>\n      ))}\n    </ul>\n  )\n};\n\nexport const Finish = (items) => {\n  return () => (\n    <ul>\n      {items.map(item => (\n        <li key={item.code}>\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import React from 'react';\nimport { AsList } from './HOC';\n\nimport {\n  gql,\n  useQuery,\n} from \"@apollo/client\";\n\nexport const ComponentContext = React.createContext({\n  asList: () => {},\n  data: {},\n})\n\nexport const ComponentProvider = ({ children }) => {\n  const { loading, error, data } = useQuery(gql`\n  query {\n    continents {\n      code\n      name\n      countries {\n        code\n        name\n        languages {\n          name\n        }\n      }\n    }\n  }\n`);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n\n  console.log(data);\n\n  const contextValue = {\n    data,\n    AsList,\n  }\n\n  return (\n    <ComponentContext.Provider value={contextValue}>\n      {children}\n    </ComponentContext.Provider>\n  )\n}\n","import { useContext } from 'react';\nimport { ComponentContext } from './ComponentProvider';\nimport { Finish } from './HOC';\n\nexport const Languages = (props) => {\n  const { AsList } = useContext(ComponentContext);\n  const LanguagesList = AsList(props.languages, Finish);\n\n  return (<LanguagesList />)\n}\n","import { useContext } from 'react';\nimport { ComponentContext } from './ComponentProvider';\nimport { Languages } from './Languages';\n\n\nexport const Countries = (props) => {\n  const { AsList } = useContext(ComponentContext);\n  const CountriesList = AsList(props.countries, Languages);\n\n  return (<CountriesList />);\n}\n","import React, { useContext } from 'react';\nimport { Countries } from './components/Countries';\n\nimport { ComponentContext } from './components/ComponentProvider';\n\nimport './App.css';\n\nfunction App() {\n  const { data, AsList } = useContext(ComponentContext);\n  const ContinentsList = AsList(data.continents, Countries);\n\n  return (\n    <ContinentsList />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ComponentProvider } from './components/ComponentProvider';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  // gql,\n} from \"@apollo/client\";\n\n// export const dataFromServer = (string) => gql`${string}`;\n\nconst client = new ApolloClient({\n  uri: 'https://countries.trevorblades.com/',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ComponentProvider>\n      <App />\n    </ComponentProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}