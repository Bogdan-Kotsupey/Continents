{"version":3,"sources":["components/HOC.js","components/ComponentProvider.js","components/Languages.js","components/Countries.js","App.js","index.js"],"names":["AsList","items","SomeComponent","bool","gruopKey","uuidv4","id","className","vlaue","map","item","i","arr","itemKey","buttonKey","childrensKey","value","onClick","childrensId","groupKey","length","document","getElementById","style","display","someComponent","parentNode","upperSomeComponent","nodes","children","console","log","forEach","call","noda","lastChild","name","ComponentContext","React","createContext","asList","data","ComponentProvider","useQuery","gql","loading","error","contextValue","Provider","Languages","props","useContext","LanguagesList","languages","Countries","CountriesList","countries","App","ContinentsList","continents","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider"],"mappings":"2RAMaA,EAAS,SAACC,EAAOC,EAAeC,GAE3C,IAqBMC,EAAWC,cAGjB,OAAO,kBACL,qBAAKC,GAAIF,EAAUG,UAAU,QAAQC,MAAO,EAA5C,SACGP,EAAMQ,KAAI,SAACC,EAAMC,EAAGC,GACnB,IAAMC,EAAUR,cACVS,EAAYT,cACZU,EAAeV,cAErB,OACE,sBAAmBC,GAAIO,EAASN,UAAU,OAAOS,MAAO,EAAxD,UACE,wBACET,UAAU,OACVD,GAAIQ,EACJE,MAAO,EACPC,QAAS,kBArCL,SAACC,EAAaP,EAAGC,EAAKT,EAAMgB,GAE1C,GAAKhB,GAAQQ,IAAMC,EAAIQ,OAAS,EAY1BjB,IACmBkB,SAASC,eAAeJ,GAChCK,MAAMC,QAAU,aAdE,CACjC,IAAMC,EAAgBJ,SAASC,eAAeH,GAAUO,WAClDC,EAAqBN,SAASC,eAAeG,EAAclB,WAAWmB,WACtEE,EAAQP,SAASC,eAAeG,EAAclB,WAAWsB,SAC/DF,EAAmBJ,MAAMC,QAAU,OACnCM,QAAQC,IAAIH,GAEZ,GAAGI,QAAQC,KAAKL,GAAO,SAAUM,GAC/BA,EAAKC,UAAUZ,MAAMC,QAAU,WA2BVP,CAAQF,EAAcJ,EAAGC,EAAKT,EAAMC,IAJrD,SAMGM,EAAK0B,OAEPjC,GAAQ,qBAAKa,MAAO,EAAGV,GAAIS,EAAcQ,MAAO,CAACC,QAAS,QAASjB,UAAWH,EAAtE,SAAgF,cAACF,EAAD,eAAmBQ,QATpGG,U,gBChCPwB,EAAmBC,IAAMC,cAAc,CAClDC,OAAQ,aACRC,KAAM,KAGKC,EAAoB,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAClC,EAAiCc,YAASC,YAAA,IAAD,kNAAjCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOL,EAAxB,EAAwBA,KAiBxB,GAAII,EAAS,OAAO,2CACpB,GAAIC,EAAO,OAAO,yCAElB,IAAMC,EAAe,CACnBN,OACAzC,UAGF,OACE,cAACqC,EAAiBW,SAAlB,CAA2BhC,MAAO+B,EAAlC,SACGlB,KCtCMoB,EAAY,SAACC,GACxB,IAAQlD,EAAWmD,qBAAWd,GAAtBrC,OACFoD,EAAgBpD,EAAOkD,EAAMG,UAAWrD,GAAQ,GAEtD,OAAQ,cAACoD,EAAD,KCFGE,EAAY,SAACJ,GACxB,IACMK,GAAgBvD,EADHmD,qBAAWd,GAAtBrC,QACqBkD,EAAMM,UAAWP,GAAW,GAEzD,OAAQ,cAACM,EAAD,K,MCMKE,MAPf,WACE,MAAyBN,qBAAWd,GAA5BI,EAAR,EAAQA,KACFiB,GAAiB1D,EADvB,EAAcA,QACgByC,EAAKkB,WAAYL,GAAW,GAE1D,OAAQ,cAACI,EAAD,K,wBCGJE,EAAS,IAAIC,IAAa,CAC9BC,IAAK,sCACLC,MAAO,IAAIC,MAGbC,IAASC,OACP,cAACC,EAAA,EAAD,CAAgBP,OAAQA,EAAxB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJvC,SAASC,eAAe,W","file":"static/js/main.0295df3c.chunk.js","sourcesContent":["import React from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './HOCstyle.css';\n\nexport const AsList = (items, SomeComponent, bool) => {\n\n  const onClick = (childrensId, i, arr, bool, groupKey) => {\n\n    if (!bool && i === arr.length - 1) {\n      const someComponent = document.getElementById(groupKey).parentNode;\n      const upperSomeComponent = document.getElementById(someComponent.className).parentNode;\n      const nodes = document.getElementById(someComponent.className).children;\n      upperSomeComponent.style.display = 'none';\n      console.log(nodes);\n\n      [].forEach.call(nodes, function (noda) {\n        noda.lastChild.style.display = 'none';\n      });\n\n    } else {\n      if (bool) {\n        const childrensDiv = document.getElementById(childrensId);\n        childrensDiv.style.display = 'block';\n      }\n    }\n  };\n\n  const gruopKey = uuidv4();\n\n\n  return () => (\n    <div id={gruopKey} className='group' vlaue={1}>\n      {items.map((item, i, arr) => {\n        const itemKey = uuidv4();\n        const buttonKey = uuidv4();\n        const childrensKey = uuidv4();\n\n        return (\n          <div key={itemKey} id={itemKey} className='item' value={2}>\n            <button\n              className='node'\n              id={buttonKey}\n              value={3}\n              onClick={() => onClick(childrensKey, i, arr, bool, gruopKey)}\n            >\n              {item.name}\n            </button>\n            {bool && <div value={4} id={childrensKey} style={{display: 'none'}} className={gruopKey}><SomeComponent {...item}/></div>}\n          </div>\n        )}\n      )}\n     </div>\n  )\n}\n","import React from 'react';\nimport { AsList } from './HOC';\n\nimport {\n  gql,\n  useQuery,\n} from \"@apollo/client\";\n\nexport const ComponentContext = React.createContext({\n  asList: () => {},\n  data: {},\n})\n\nexport const ComponentProvider = ({ children }) => {\n  const { loading, error, data } = useQuery(gql`\n  query {\n    continents {\n      code\n      name\n      countries {\n        code\n        name\n        languages {\n          name\n          code\n        }\n      }\n    }\n  }\n`);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  const contextValue = {\n    data,\n    AsList,\n  }\n\n  return (\n    <ComponentContext.Provider value={contextValue}>\n      {children}\n    </ComponentContext.Provider>\n  )\n}\n","import { useContext } from 'react';\nimport { ComponentContext } from './ComponentProvider';\n\nexport const Languages = (props) => {\n  const { AsList } = useContext(ComponentContext);\n  const LanguagesList = AsList(props.languages, AsList, false);\n\n  return (<LanguagesList />)\n}\n","import { useContext } from 'react';\nimport { ComponentContext } from './ComponentProvider';\nimport { Languages } from './Languages';\n\n\nexport const Countries = (props) => {\n  const { AsList } = useContext(ComponentContext);\n  const CountriesList = AsList(props.countries, Languages, true);\n\n  return (<CountriesList />);\n}\n","import React, { useContext } from 'react';\nimport { Countries } from './components/Countries';\n\nimport { ComponentContext } from './components/ComponentProvider';\n\nimport './App.css';\n\n\nfunction App() {\n  const { data, AsList } = useContext(ComponentContext);\n  const ContinentsList = AsList(data.continents, Countries, true);\n\n  return (<ContinentsList />);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ComponentProvider } from './components/ComponentProvider';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  // gql,\n} from \"@apollo/client\";\n\n// export const dataFromServer = (string) => gql`${string}`;\n\nconst client = new ApolloClient({\n  uri: 'https://countries.trevorblades.com/',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ComponentProvider>\n      <App />\n    </ComponentProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}